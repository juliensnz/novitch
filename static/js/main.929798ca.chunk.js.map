{"version":3,"sources":["component.tsx","page/temoins.tsx","page/information.tsx","page/home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Title","styled","h1","Text","p","Page","div","Faces","Face","Image","img","Temoins","src","baseUrl","Information","Container","StyledCounter","Count","Value","Label","getDays","date","moment","diff","getHours","duration","hours","getMinutes","minutes","getSeconds","seconds","Counter","React","useState","days","setDays","setHours","setMinutes","setSeconds","timer","useRef","useEffect","current","setInterval","clearInterval","useTimer","Home","Header","nav","Menu","ul","Item","App","to","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.929798ca.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-weight: 200;\n  text-transform: uppercase;\n`;\n\nexport const Text = styled.p`\n  font-weight: 200;\n  font-size: 17px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Title, Text } from \"../component\";\nimport { baseUrl } from \"../App\";\n\nconst Page = styled.div``;\nconst Faces = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, minmax(140px, 1fr));\n  grid-gap: 30px;\n\n  @media (max-width: 910px) {\n    grid-template-columns: repeat(2, minmax(140px, 1fr));\n  }\n`;\n\nconst Face = styled.div`\n  /* max-height: 300px; */\n`;\n\nconst Image = styled.img`\n  width: 100%;\n`;\n\nexport const Temoins = () => {\n  return (\n    <Page>\n      <Title>Mon super titre</Title>\n      <Text>\n        Morbi id tortor non quam aliquet eleifend. Etiam ultricies ac neque eget\n        volutpat. Fusce et ultricies elit, vel efficitur nisi. Aenean mattis\n        orci eget interdum iaculis. Maecenas odio eros, luctus in enim ac,\n        scelerisque condimentum leo. Ut rutrum gravida felis vel dictum.\n        Curabitur in aliquet ligula. Ut porta nulla eget velit convallis, a\n        vehicula purus mattis. Donec nulla nibh, condimentum lobortis sagittis\n        ut, fringilla nec sem. Aliquam vel turpis nisi. Vestibulum id vehicula\n        ipsum. Duis in consequat odio. Nunc tincidunt lacinia massa, nec semper\n        sem volutpat vitae. Duis at mauris libero. Praesent laoreet, nisi a\n        sagittis convallis, nulla orci bibendum nisi, et lacinia diam ligula id\n        ipsum.\n      </Text>\n      <Faces>\n        <Face>\n          <Image src={`${baseUrl}/images/virge.jpg`} />\n        </Face>\n        <Face>\n          <Image src={`${baseUrl}/images/flo.jpg`} />\n        </Face>\n        <Face>\n          <Image src={`${baseUrl}/images/sebas.jpg`} />\n        </Face>\n        <Face>\n          <Image src={`${baseUrl}/images/jeff.jpg`} />\n        </Face>\n      </Faces>\n    </Page>\n  );\n};\n","import React from 'react';\n\nexport const Information = () => {\n  return (<div>Information</div>)\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport { Title } from \"../component\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\nconst StyledCounter = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, minmax(50px, 1fr));\n  grid-gap: 10px;\n  margin-top: 100px;\n  flex: 1;\n  mix-blend-mode: difference;\n  color: white;\n  filter: grayscale(1) contrast(9);\n\n  @media (max-width: 570px) {\n    grid-template-columns: repeat(1, minmax(50px, 1fr));\n    margin-top: 40px;\n  }\n`;\n\nconst Count = styled.div`\n  text-align: center;\n`;\nconst Value = styled.div`\n  font-size: 50px;\n  font-weight: 200;\n`;\nconst Label = styled.div``;\n\nconst getDays = (date: number[]) => moment(date).diff(moment(), \"days\");\nconst getHours = (date: number[]) =>\n  moment.duration(moment(date).diff(moment()), \"milliseconds\").hours();\nconst getMinutes = (date: number[]) =>\n  moment.duration(moment(date).diff(moment()), \"milliseconds\").minutes();\nconst getSeconds = (date: number[]) =>\n  moment.duration(moment(date).diff(moment()), \"milliseconds\").seconds();\n\nconst useTimer = (date: number[]) => {\n  const [days, setDays] = React.useState(getDays(date));\n  const [hours, setHours] = React.useState(getHours(date));\n  const [minutes, setMinutes] = React.useState(getMinutes(date));\n  const [seconds, setSeconds] = React.useState(getSeconds(date));\n  const timer = React.useRef<null | any>(null);\n\n  React.useEffect(() => {\n    timer.current = setInterval(() => {\n      setDays(getDays(date));\n      setHours(getHours(date));\n      setMinutes(getMinutes(date));\n      setSeconds(getSeconds(date));\n    }, 1000);\n\n    return () => {\n      clearInterval(timer.current);\n    };\n  }, [date]);\n\n  return [days, hours, minutes, seconds];\n};\n\nconst Counter = ({ date }: { date: number[] }) => {\n  const [hours, days, minutes, seconds] = useTimer(date);\n\n  return (\n    <StyledCounter>\n      <Count>\n        <Value>{days}</Value>\n        <Label>Jours</Label>\n      </Count>\n      <Count>\n        <Value>{hours}</Value>\n        <Label>Heures</Label>\n      </Count>\n      <Count>\n        <Value>{minutes}</Value>\n        <Label>Minutes</Label>\n      </Count>\n      <Count>\n        <Value>{seconds}</Value>\n        <Label>Secondes</Label>\n      </Count>\n    </StyledCounter>\n  );\n};\n\nexport const Home = () => {\n  return (\n    <Container>\n      <Title>Titre</Title>\n      <Counter date={[2020, 6, 20, 14, 0, 0]} />\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { Temoins } from \"./page/temoins\";\nimport { Information } from \"./page/information\";\nimport { Home } from \"./page/home\";\nimport styled from \"styled-components\";\n\nconst Page = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-family: \"Helvetica Neue\";\n  padding: 30px 120px;\n  background-image: url(\"./images/background.jpg\");\n  background-size: cover;\n  min-height: 100vh;\n\n  @media (max-width: 910px) {\n    padding: 30px 100px;\n  }\n  @media (max-width: 500px) {\n    padding: 30px 30px;\n  }\n`;\nconst Header = styled.nav``;\nconst Menu = styled.ul`\n  display: flex;\n  list-style: none;\n  justify-content: left;\n  flex-wrap: wrap;\n  margin: 0;\n  padding: 0;\n  margin-bottom: 50px;\n\n  @media (max-width: 675px) {\n    flex-direction: column;\n  }\n`;\nconst Item = styled.ul`\n  margin: 0 40px 0 0;\n  text-transform: uppercase;\n  color: #555;\n  padding: 0;\n  flex-shrink: 0;\n  font-size: 20px;\n\n  a {\n    color: #555;\n    font-weight: 300;\n    text-decoration: none;\n  }\n`;\n\nexport const baseUrl = \"/novitch\";\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <Page>\n        <Header>\n          <Menu>\n            <Item>\n              <Link to={`${baseUrl}/`}>Home</Link>\n            </Item>\n            <Item>\n              <Link to={`${baseUrl}/temoins`}>Les témoins</Link>\n            </Item>\n            <Item>\n              <Link to={`${baseUrl}/information`}>Information</Link>\n            </Item>\n          </Menu>\n        </Header>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path={`${baseUrl}/temoins`}>\n            <Temoins />\n          </Route>\n          <Route path={`${baseUrl}/information`}>\n            <Information />\n          </Route>\n          <Route path={`${baseUrl}/`}>\n            <Home />\n          </Route>\n        </Switch>\n      </Page>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}